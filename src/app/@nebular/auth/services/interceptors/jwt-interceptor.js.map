{"version":3,"file":"jwt-interceptor.js","sourceRoot":"","sources":["../../../../../.ng_build/auth/services/interceptors/jwt-interceptor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAGrD,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;;IAM9C,8BAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;KACrC;IAED,wCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAEhD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aAC/B,IAAI,CACH,SAAS,CAAC,UAAC,KAAqB;YAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBACpB,IAAM,GAAG,GAAG,YAAU,KAAK,CAAC,QAAQ,EAAI,CAAC;gBACzC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;oBACd,UAAU,EAAE;wBACV,aAAa,EAAE,GAAG;qBACnB;iBACF,CAAC,CAAC;aACJ;YACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB,CAAC,CACH,CAAC;KACL;IAED,sBAAc,6CAAW;aAAzB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;SACzC;;;OAAA;;gBA1BF,UAAU;;;;gBARU,QAAQ;;+BAA7B;;SASa,oBAAoB","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { NbAuthService } from '../auth.service';\nimport { NbAuthJWTToken } from '../token/token';\n\n@Injectable()\nexport class NbAuthJWTInterceptor implements HttpInterceptor {\n\n  constructor(private injector: Injector) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return this.authService.getToken()\n      .pipe(\n        switchMap((token: NbAuthJWTToken) => {\n          if (token.isValid()) {\n            const JWT = `Bearer ${token.getValue()}`;\n            req = req.clone({\n              setHeaders: {\n                Authorization: JWT,\n              },\n            });\n          }\n          return next.handle(req);\n        }),\n      );\n  }\n\n  protected get authService(): NbAuthService {\n    return this.injector.get(NbAuthService);\n  }\n}\n"]}