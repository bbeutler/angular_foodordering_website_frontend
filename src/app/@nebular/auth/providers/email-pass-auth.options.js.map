{"version":3,"file":"email-pass-auth.options.js","sourceRoot":"","sources":["../../../../.ng_build/auth/providers/email-pass-auth.options.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n// TODO postfix to options\nexport interface NbEmailPassModuleConfig {\n  alwaysFail?: boolean;\n  rememberMe?: boolean;\n  endpoint?: string;\n  method?: string;\n  redirect?: {\n    success?: string | null;\n    failure?: string | null;\n  };\n  defaultErrors?: string[];\n  defaultMessages?: string[];\n}\n\n// TODO postfix to options\nexport interface NbEmailPassResetModuleConfig extends NbEmailPassModuleConfig {\n  resetPasswordTokenKey?: string;\n}\n\n// TODO postfix to options\nexport interface NgEmailPassAuthProviderConfig {\n  baseEndpoint?: string;\n  login?: boolean | NbEmailPassModuleConfig;\n  register?: boolean | NbEmailPassModuleConfig;\n  requestPass?: boolean | NbEmailPassModuleConfig;\n  resetPass?: boolean | NbEmailPassResetModuleConfig;\n  logout?: boolean | NbEmailPassResetModuleConfig;\n  refreshToken?: boolean | NbEmailPassModuleConfig;\n  token?: {\n    key?: string;\n    getter?: Function;\n  };\n  errors?: {\n    key?: string;\n    getter?: Function;\n  };\n  messages?: {\n    key?: string;\n    getter?: Function;\n  };\n  validation?: {\n    password?: {\n      required?: boolean;\n      minLength?: number | null;\n      maxLength?: number | null;\n      regexp?: string | null;\n    };\n    email?: {\n      required?: boolean;\n      regexp?: string | null;\n    };\n    fullName?: {\n      required?: boolean;\n      minLength?: number | null;\n      maxLength?: number | null;\n      regexp?: string | null;\n    };\n  };\n}\n"]}