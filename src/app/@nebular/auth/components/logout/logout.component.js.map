{"version":3,"file":"logout.component.js","sourceRoot":"","sources":["../../../../../.ng_build/auth/components/logout/logout.component.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAU,MAAM,eAAe,CAAC;AAC1D,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAEzC,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;;IAc1D,2BAAsB,OAAsB,EACG,QACzB,MAAc;;QAFd,YAAO,GAAP,OAAO,CAAe;QACG,WAAM,GAAN,MAAM;QAC/B,WAAM,GAAN,MAAM,CAAQ;6BALZ,CAAC;wBACN,EAAE;QAKnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,4BAA4B,CAAC,CAAC;QACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;KAC9D;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5B;IAED,kCAAM,GAAN,UAAO,QAAgB;QAAvB,iBAUC;QATC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,MAAoB;YAE3D,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,UAAU,CAAC;oBACT,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;iBAC5C,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;aACxB;SACF,CAAC,CAAC;KACJ;IAED,0CAAc,GAAd,UAAe,GAAW;QACxB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAClD;;gBApCF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,kDAET;iBACF;;;;gBARQ,aAAa;gDAeP,MAAM,SAAC,eAAe;gBAnB5B,MAAM;;4BANf;;SAmBa,iBAAiB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NB_AUTH_OPTIONS } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\nimport { NbAuthService } from '../../services/auth.service';\nimport { NbAuthResult } from '../../services/auth-result';\n\n@Component({\n  selector: 'nb-logout',\n  template: `\n    <div>Logging out, please wait...</div>\n  `,\n})\nexport class NbLogoutComponent implements OnInit {\n\n  redirectDelay: number = 0;\n  provider: string = '';\n\n  constructor(protected service: NbAuthService,\n              @Inject(NB_AUTH_OPTIONS) protected config = {},\n              protected router: Router) {\n    this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n    this.provider = this.getConfigValue('forms.logout.provider');\n  }\n\n  ngOnInit(): void {\n    this.logout(this.provider);\n  }\n\n  logout(provider: string): void {\n    this.service.logout(provider).subscribe((result: NbAuthResult) => {\n\n      const redirect = result.getRedirect();\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n    });\n  }\n\n  getConfigValue(key: string): any {\n    return getDeepFromObject(this.config, key, null);\n  }\n}\n"]}