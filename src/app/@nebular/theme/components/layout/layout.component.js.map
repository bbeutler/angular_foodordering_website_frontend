{"version":3,"file":"layout.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/layout/layout.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterViewInit, Component, ComponentFactoryResolver, ElementRef, HostBinding, HostListener, Input, OnDestroy,\n  Renderer2, ViewChild, ViewContainerRef, OnInit, ComponentFactory, Inject, PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { filter, takeWhile } from 'rxjs/operators';\n\nimport { convertToBoolProperty } from '../helpers';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbSpinnerService } from '../../services/spinner.service';\nimport { NbLayoutDirectionService } from '../../services/direction.service';\nimport { NB_WINDOW, NB_DOCUMENT } from '../../theme.options';\n\n/**\n * A container component which determines a content position inside of the layout.\n * The layout could contain unlimited columns (not including the sidebars).\n *\n * @example By default the columns are ordered from the left to the right,\n * but it's also possible to overwrite this behavior by setting a `left` attribute to the column,\n * moving it to the very first position:\n * ```\n * <nb-layout>\n *   <nb-layout-column>Second</nb-layout-column>\n *   <nb-layout-column>Third</nb-layout-column>\n *   <nb-layout-column left>First</nb-layout-column>\n * </nb-layout>\n * ```\n */\n@Component({\n  selector: 'nb-layout-column',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class NbLayoutColumnComponent {\n\n  @HostBinding('class.left') leftValue: boolean;\n  @HostBinding('class.start') startValue: boolean;\n\n  /**\n   * Move the column to the very left position in the layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set left(val: boolean) {\n    this.leftValue = convertToBoolProperty(val);\n    this.startValue = false;\n  }\n\n  /**\n   * Make columnt first in the layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set start(val: boolean) {\n    this.startValue = convertToBoolProperty(val);\n    this.leftValue = false;\n  }\n}\n\n/**\n * Page header component.\n * Located on top of the page above the layout columns and sidebars.\n * Could be made `fixed` by setting the corresponding property. In the fixed mode the header becomes\n * sticky to the top of the nb-layout (to of the page).\n *\n * @styles\n *\n * header-font-family\n * header-line-height\n * header-fg\n * header-bg\n * header-height\n * header-padding\n * header-shadow\n */\n@Component({\n  selector: 'nb-layout-header',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n})\nexport class NbLayoutHeaderComponent {\n\n  @HostBinding('class.fixed') fixedValue: boolean;\n\n  /**\n   * Makes the header sticky to the top of the nb-layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set fixed(val: boolean) {\n    this.fixedValue = convertToBoolProperty(val);\n  }\n}\n\n/**\n * Page footer.\n * Located under the nb-layout content (specifically, under the columns).\n * Could be made `fixed`, becoming sticky to the bottom of the view port (window).\n *\n * @styles\n *\n * footer-height\n * footer-padding\n * footer-fg\n * footer-bg\n * footer-separator\n * footer-shadow\n */\n@Component({\n  selector: 'nb-layout-footer',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n})\nexport class NbLayoutFooterComponent {\n\n  @HostBinding('class.fixed') fixedValue: boolean;\n\n  /**\n   * Makes the footer sticky to the bottom of the window.\n   * @param {boolean} val\n   */\n  @Input()\n  set fixed(val: boolean) {\n    this.fixedValue = convertToBoolProperty(val);\n  }\n\n}\n\n/**\n * The general Nebular component-container.\n * It is required that all children component of the framework are located inside of the nb-layout.\n *\n * Can contain the following components inside:\n *\n * ```\n * nb-layout-header\n * nb-layout-column\n * nb-sidebar\n * nb-layout-footer\n * ```\n *\n * By default the layout fills up the full view-port.\n * The window scrollbars are disabled on the body and moved inside of the nb-layout, so that the scrollbars\n * won't mess with the fixed nb-header.\n *\n * The children components are projected into the flexible layout structure allowing to adjust the layout behavior\n * based on the settings provided.\n *\n * The layout content (columns) becomes centered when the window width is more than\n * the value specified in the theme variable `layout-content-width`.\n *\n * The layout also contains the area on the very top (the first child of the nb-layout), which could be used\n * to dynamically append some components like modals or spinners/loaders\n * so that they are located on top of the elements hierarchy.\n * More details are below under the `ThemeService` section.\n *\n * The layout component is also responsible for changing of the application themes.\n * It listens to the `themeChange` event and change the theme CSS class appended to body.\n * Based on the class appended a specific CSS-theme is applied to the application.\n * More details of the Theme System could be found here [Enabling Theme System](#/docs/concepts/theme-system)\n *\n * @example A simple layout example:\n *\n * ```\n * <nb-layout>\n *   <nb-layout-header>Great Company</nb-layout-header>\n *\n *   <nb-layout-column>\n *     Hello World!\n *   </nb-layout-column>\n *\n *   <nb-layout-footer>Contact us</nb-layout-footer>\n * </nb-layout>\n * ```\n *\n * @example For example, it is possible to ask the layout to center the columns (notice: we added a `center` attribute\n * to the layout:\n *\n * ```\n * <nb-layout center>\n *   <nb-layout-header>Great Company</nb-layout-header>\n *\n *   <nb-layout-column>\n *     Hello World!\n *   </nb-layout-column>\n *\n *   <nb-layout-footer>Contact us</nb-layout-footer>\n * </nb-layout>\n * ```\n *\n * @styles\n *\n * layout-font-family\n * layout-font-size\n * layout-line-height\n * layout-fg\n * layout-bg\n * layout-min-height\n * layout-content-width\n * layout-window-mode-min-width\n * layout-window-mode-max-width: window mode only, after this value layout turns into floating window\n * layout-window-mode-bg: window mode only, background\n * layout-window-mode-padding-top: window mode only, max padding from top\n * layout-window-shadow: window mode shadow\n * layout-padding\n * layout-medium-padding\n * layout-small-padding\n */\n@Component({\n  selector: 'nb-layout',\n  styleUrls: ['./layout.component.css'],\n  template: `\n    <ng-template #layoutTopDynamicArea></ng-template>\n    <div class=\"scrollable-container\" #scrollableContainer>\n      <div class=\"layout\">\n        <ng-content select=\"nb-layout-header\"></ng-content>\n        <div class=\"layout-container\">\n          <ng-content select=\"nb-sidebar\"></ng-content>\n          <div class=\"content\" [class.center]=\"centerValue\">\n            <div class=\"columns\">\n              <ng-content select=\"nb-layout-column\"></ng-content>\n            </div>\n            <ng-content select=\"nb-layout-footer\"></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NbLayoutComponent implements AfterViewInit, OnInit, OnDestroy {\n\n  centerValue: boolean = false;\n\n  @HostBinding('class.window-mode') windowModeValue: boolean = false;\n  @HostBinding('class.with-scroll') withScrollValue: boolean = false;\n\n  /**\n   * Defines whether the layout columns will be centered after some width\n   * @param {boolean} val\n   */\n  @Input()\n  set center(val: boolean) {\n    this.centerValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\n   * becomes centered by width with a margin from the top of the screen, like a floating window.\n   * Automatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\n   * window. (TODO: check this)\n   * @param {boolean} val\n   */\n  @Input()\n  set windowMode(val: boolean) {\n    this.windowModeValue = convertToBoolProperty(val);\n    this.withScroll = this.windowModeValue;\n  }\n\n  /**\n   * Defines whether to move the scrollbars to layout or leave it at the body level.\n   * Automatically set to true when `windowMode` is enabled.\n   * @param {boolean} val\n   */\n  @Input()\n  set withScroll(val: boolean) {\n    this.withScrollValue = convertToBoolProperty(val);\n\n    // TODO: is this the best way of doing it? as we don't have access to body from theme styles\n    // TODO: add e2e test\n    const body = this.document.getElementsByTagName('body')[0];\n    if (this.withScrollValue) {\n      this.renderer.setStyle(body, 'overflow', 'hidden');\n    } else {\n      this.renderer.setStyle(body, 'overflow', 'initial');\n    }\n  }\n\n  @ViewChild('layoutTopDynamicArea', { read: ViewContainerRef }) veryTopRef: ViewContainerRef;\n  @ViewChild('scrollableContainer', { read: ElementRef }) scrollableContainerRef: ElementRef;\n\n  protected afterViewInit$ = new BehaviorSubject(null);\n\n  private alive: boolean = true;\n\n  constructor(\n    protected themeService: NbThemeService,\n    protected spinnerService: NbSpinnerService,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n    protected router: Router,\n    @Inject(NB_WINDOW) protected window,\n    @Inject(NB_DOCUMENT) protected document,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected layoutDirectionService: NbLayoutDirectionService,\n  ) {\n\n    this.themeService.onThemeChange()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((theme: any) => {\n        const body = this.document.getElementsByTagName('body')[0];\n        if (theme.previous) {\n          this.renderer.removeClass(body, `nb-theme-${theme.previous}`);\n        }\n        this.renderer.addClass(body, `nb-theme-${theme.name}`);\n      });\n\n    this.themeService.onAppendLayoutClass()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((className: string) => {\n        this.renderer.addClass(this.elementRef.nativeElement, className);\n      });\n\n    this.themeService.onRemoveLayoutClass()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((className: string) => {\n        this.renderer.removeClass(this.elementRef.nativeElement, className);\n      });\n\n    this.spinnerService.registerLoader(new Promise((resolve, reject) => {\n      this.afterViewInit$\n        .pipe(\n          takeWhile(() => this.alive),\n        )\n        .subscribe((_) => resolve());\n    }));\n    this.spinnerService.load();\n\n    if (isPlatformBrowser(this.platformId)) {\n      // trigger first time so that after the change we have the initial value\n      this.themeService.changeWindowWidth(this.window.innerWidth);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.themeService.onAppendToTop()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((data: { factory: ComponentFactory<any>, listener: Subject<any> }) => {\n        const componentRef = this.veryTopRef.createComponent(data.factory);\n        data.listener.next(componentRef);\n        data.listener.complete();\n      });\n\n    this.themeService.onClearLayoutTop()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((data: { listener: Subject<any> }) => {\n        this.veryTopRef.clear();\n        data.listener.next(true);\n      });\n\n    this.layoutDirectionService.onDirectionChange()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(direction => {\n        this.renderer.setProperty(this.document, 'dir', direction);\n      });\n\n    this.afterViewInit$.next(true);\n  }\n\n  ngOnInit() {\n    this.initScrollTop();\n  }\n\n  ngOnDestroy() {\n    this.themeService.clearLayoutTop();\n    this.alive = false;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.themeService.changeWindowWidth(event.target.innerWidth);\n  }\n\n  private initScrollTop() {\n    this.router.events\n      .pipe(\n        takeWhile(() => this.alive),\n        filter(event => event instanceof NavigationEnd),\n      )\n      .subscribe(() => {\n        this.scrollableContainerRef.nativeElement.scrollTo && this.scrollableContainerRef.nativeElement.scrollTo(0, 0);\n      });\n  }\n}\n"]}