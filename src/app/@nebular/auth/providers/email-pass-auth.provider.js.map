{"version":3,"file":"email-pass-auth.provider.js","sourceRoot":"","sources":["../../../../.ng_build/auth/providers/email-pass-auth.provider.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\n\nimport { NgEmailPassAuthProviderConfig } from './email-pass-auth.options';\nimport { NbAuthResult } from '../services/auth-result';\nimport { NbAbstractAuthProvider } from './abstract-auth.provider';\nimport { getDeepFromObject } from '../helpers';\n\n/**\n * The most common authentication provider for email/password strategy.\n *\n *\n * @example\n *\n * Default settings object:\n *\n * ```\n * {\n *  baseEndpoint: '',\n *  login: {\n *    alwaysFail: false,\n *    rememberMe: true,\n *    endpoint: '/api/auth/login',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  },\n *  register: {\n *    alwaysFail: false,\n *    rememberMe: true,\n *    endpoint: '/api/auth/register',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  },\n *  logout: {\n *    alwaysFail: false,\n *    endpoint: '/api/auth/logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  },\n *  requestPass: {\n *    endpoint: '/api/auth/request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  },\n *  resetPass: {\n *    endpoint: '/api/auth/reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  },\n *  refreshToken: {\n *    endpoint: '/api/auth/refresh-token',\n *    method: 'post',\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  },\n *  token: {\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n *      this.getConfigValue('token.key')),\n *  },\n *  errors: {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse) => getDeepFromObject(res.error,\n *      this.getConfigValue('errors.key'),\n *      this.getConfigValue(`${module}.defaultErrors`)),\n *  },\n *  messages: {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n *      this.getConfigValue('messages.key'),\n *      this.getConfigValue(`${module}.defaultMessages`)),\n *  },\n *}\n *\n * // Note, there is no need to copy over the whole object to change the settings you need.\n * // Also, this.getConfigValue call won't work outside ofthe default config declaration\n * // (which is inside of the `NbEmailPassAuthProvider` class), so you have to replace it with a custom helper function\n * // if you need it.\n * ```\n */\n@Injectable()\nexport class NbEmailPassAuthProvider extends NbAbstractAuthProvider {\n\n  protected defaultConfig: NgEmailPassAuthProviderConfig = {\n    baseEndpoint: '/api/auth/',\n    login: {\n      alwaysFail: false,\n      rememberMe: true, // TODO: what does that mean?\n      endpoint: 'login',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Login/Email combination is not correct, please try again.'],\n      defaultMessages: ['You have been successfully logged in.'],\n    },\n    register: {\n      alwaysFail: false,\n      rememberMe: true,\n      endpoint: 'register',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully registered.'],\n    },\n    logout: {\n      alwaysFail: false,\n      endpoint: 'logout',\n      method: 'delete',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully logged out.'],\n    },\n    requestPass: {\n      endpoint: 'request-pass',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Reset password instructions have been sent to your email.'],\n    },\n    resetPass: {\n      endpoint: 'reset-pass',\n      method: 'put',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      resetPasswordTokenKey: 'reset_password_token',\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Your password has been successfully changed.'],\n    },\n    refreshToken: {\n      endpoint: 'refresh-token',\n      method: 'post',\n      redirect: {\n        success: null,\n        failure: null,\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Your token has been successfully refreshed.'],\n    },\n    token: {\n      key: 'data.token',\n      getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n        this.getConfigValue('token.key')),\n    },\n    errors: {\n      key: 'data.errors',\n      getter: (module: string, res: HttpErrorResponse) => getDeepFromObject(res.error,\n        this.getConfigValue('errors.key'),\n        this.getConfigValue(`${module}.defaultErrors`)),\n    },\n    messages: {\n      key: 'data.messages',\n      getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n        this.getConfigValue('messages.key'),\n        this.getConfigValue(`${module}.defaultMessages`)),\n    },\n  };\n\n  constructor(protected http: HttpClient, private route: ActivatedRoute) {\n    super();\n  }\n\n  authenticate(data?: any): Observable<NbAuthResult> {\n    const method = this.getConfigValue('login.method');\n    const url = this.getActionEndpoint('login');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getConfigValue('login.alwaysFail')) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        this.validateToken('login'),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getConfigValue('login.redirect.success'),\n            [],\n            this.getConfigValue('messages.getter')('login', res),\n            this.getConfigValue('token.getter')('login', res));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getConfigValue('errors.getter')('login', res);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getConfigValue('login.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  register(data?: any): Observable<NbAuthResult> {\n    const method = this.getConfigValue('register.method');\n    const url = this.getActionEndpoint('register');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getConfigValue('register.alwaysFail')) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        this.validateToken('register'),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getConfigValue('register.redirect.success'),\n            [],\n            this.getConfigValue('messages.getter')('register', res),\n            this.getConfigValue('token.getter')('register', res));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getConfigValue('errors.getter')('register', res);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getConfigValue('register.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  requestPassword(data?: any): Observable<NbAuthResult> {\n    const method = this.getConfigValue('requestPass.method');\n    const url = this.getActionEndpoint('requestPass');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getConfigValue('requestPass.alwaysFail')) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getConfigValue('requestPass.redirect.success'),\n            [],\n            this.getConfigValue('messages.getter')('requestPass', res));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getConfigValue('errors.getter')('requestPass', res);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getConfigValue('requestPass.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  resetPassword(data: any = {}): Observable<NbAuthResult> {\n    const tokenKey = this.getConfigValue('resetPass.resetPasswordTokenKey');\n    data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n\n    const method = this.getConfigValue('resetPass.method');\n    const url = this.getActionEndpoint('resetPass');\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getConfigValue('resetPass.alwaysFail')) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getConfigValue('resetPass.redirect.success'),\n            [],\n            this.getConfigValue('messages.getter')('resetPass', res));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getConfigValue('errors.getter')('resetPass', res);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getConfigValue('resetPass.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  logout(): Observable<NbAuthResult> {\n\n    const method = this.getConfigValue('logout.method');\n    const url = this.getActionEndpoint('logout');\n\n    return observableOf({})\n      .pipe(\n        switchMap((res: any) => {\n          if (!url) {\n            return observableOf(res);\n          }\n          return this.http.request(method, url, {observe: 'response'});\n        }),\n        map((res) => {\n          if (this.getConfigValue('logout.alwaysFail')) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getConfigValue('logout.redirect.success'),\n            [],\n            this.getConfigValue('messages.getter')('logout', res));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getConfigValue('errors.getter')('logout', res);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getConfigValue('logout.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  refreshToken(data?: any): Observable<NbAuthResult> {\n    const method = this.getConfigValue('refreshToken.method');\n    const url = this.getActionEndpoint('refreshToken');\n\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getConfigValue('refreshToken.alwaysFail')) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        this.validateToken('refreshToken'),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getConfigValue('refreshToken.redirect.success'),\n            [],\n            this.getConfigValue('messages.getter')('refreshToken', res),\n            this.getConfigValue('token.getter')('refreshToken', res));\n        }),\n        catchError((res) => {\n          let errors = [];\n          if (res instanceof HttpErrorResponse) {\n            errors = this.getConfigValue('errors.getter')('refreshToken', res);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return observableOf(\n            new NbAuthResult(\n              false,\n              res,\n              this.getConfigValue('refreshToken.redirect.failure'),\n              errors,\n            ));\n        }),\n      );\n  }\n\n  protected validateToken (module: string): any {\n    return map((res) => {\n      const token = this.getConfigValue('token.getter')(module, res);\n      if (!token) {\n        const key = this.getConfigValue('token.key');\n        console.warn(`NbEmailPassAuthProvider:\n                          Token is not provided under '${key}' key\n                          with getter '${this.getConfigValue('token.getter')}', check your auth configuration.`);\n\n        throw new Error('Could not extract token from the response.');\n      }\n      return res;\n    });\n  }\n\n  protected getActionEndpoint(action: string): string {\n    const actionEndpoint: string = this.getConfigValue(`${action}.endpoint`);\n    const baseEndpoint: string = this.getConfigValue('baseEndpoint');\n    return baseEndpoint + actionEndpoint;\n  }\n}\n"]}