{"version":3,"file":"auth.module.js","sourceRoot":"","sources":["../../../.ng_build/auth/auth.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NbLayoutModule, NbCardModule, NbCheckboxModule } from '../../@nebular/theme';\n\nimport { NbAuthService } from './services/auth.service';\nimport { NbDummyAuthProvider } from './providers/dummy-auth.provider';\nimport { NbEmailPassAuthProvider } from './providers/email-pass-auth.provider';\nimport { NbTokenService } from './services/token/token.service';\nimport { NbAuthSimpleToken } from './services/token/token';\nimport { NbTokenLocalStorage, NbTokenStorage } from './services/token/token-storage';\nimport {\n  defaultSettings,\n  NB_AUTH_USER_OPTIONS,\n  NB_AUTH_OPTIONS,\n  NB_AUTH_PROVIDERS,\n  NbAuthOptions, NB_AUTH_INTERCEPTOR_HEADER, NB_AUTH_TOKEN_CLASS,\n} from './auth.options';\n\nimport { NbAuthComponent } from './components/auth.component';\n\nimport { NbAuthBlockComponent } from './components/auth-block/auth-block.component';\nimport { NbLoginComponent } from './components/login/login.component';\nimport { NbRegisterComponent } from './components/register/register.component';\nimport { NbLogoutComponent } from './components/logout/logout.component';\nimport { NbRequestPasswordComponent } from './components/request-password/request-password.component';\nimport { NbResetPasswordComponent } from './components/reset-password/reset-password.component';\n\nimport { routes } from './auth.routes';\nimport { deepExtend } from './helpers';\n\nexport function nbAuthServiceFactory(config: any, tokenService: NbTokenService, injector: Injector) {\n  const providers = config.providers || {};\n\n  for (const key in providers) {\n    if (providers.hasOwnProperty(key)) {\n      const provider = providers[key];\n      const object = injector.get(provider.service);\n      object.setConfig(provider.config || {});\n    }\n  }\n\n  return new NbAuthService(tokenService, injector, providers);\n}\n\nexport function nbOptionsFactory(options) {\n  return deepExtend(defaultSettings, options);\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NbLayoutModule,\n    NbCardModule,\n    NbCheckboxModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    HttpClientModule,\n  ],\n  declarations: [\n    NbAuthComponent,\n    NbAuthBlockComponent,\n    NbLoginComponent,\n    NbRegisterComponent,\n    NbRequestPasswordComponent,\n    NbResetPasswordComponent,\n    NbLogoutComponent,\n  ],\n  exports: [\n    NbAuthComponent,\n    NbAuthBlockComponent,\n    NbLoginComponent,\n    NbRegisterComponent,\n    NbRequestPasswordComponent,\n    NbResetPasswordComponent,\n    NbLogoutComponent,\n  ],\n})\nexport class NbAuthModule {\n  static forRoot(nbAuthOptions?: NbAuthOptions): ModuleWithProviders {\n    return <ModuleWithProviders> {\n      ngModule: NbAuthModule,\n      providers: [\n        { provide: NB_AUTH_USER_OPTIONS, useValue: nbAuthOptions },\n        { provide: NB_AUTH_OPTIONS, useFactory: nbOptionsFactory, deps: [NB_AUTH_USER_OPTIONS] },\n        { provide: NB_AUTH_PROVIDERS, useValue: {} },\n        { provide: NB_AUTH_TOKEN_CLASS, useValue: NbAuthSimpleToken },\n        { provide: NB_AUTH_INTERCEPTOR_HEADER, useValue: 'Authorization' },\n        {\n          provide: NbAuthService,\n          useFactory: nbAuthServiceFactory,\n          deps: [NB_AUTH_OPTIONS, NbTokenService, Injector],\n        },\n        { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n        NbTokenService,\n        NbDummyAuthProvider,\n        NbEmailPassAuthProvider,\n      ],\n    };\n  }\n}\n"]}